shader (
    name: "My Shader"

    include("
        // Include block to be included in every pass of every sub-shader.
    ")

    // Sub shaders to support different shader LOD levels
    sub_shader (
        name: "Sub shader 1"
        lod: 600

        // Similar to Shaderlab's shader keywords for multi_compile directives
        shader_keywords (
            (NORMAL_MAPPING_ON, NORMAL_MAPPING_OFF)
            (_, SHADER_FEATURE_PARALLAX_OCCLUSION_MAPPING)
        )

        // The render queue this shader should be rendered in.
        // can be "Opaque" or "Transparent(n)" where n is a number in the range [0, n] to determine order
        // for transparent rendering.
        render_queue: Opaque

        include ("
            // Include block to be included to each pass of this sub-shader.
        ")

        pass (
            name: "My Pass"

            // Pass-local shader program entry points. They take
            entry_points (
                vertex: "vert",
                fragment: "frag",
                geometry: "geom",
                tesselation (
                    control: "tess_ctrl",
                    evaluation: "tess_eval"
                )
            )

            glsl ("
                void vert()
                {
                    // Vertex Program
                }

                void frag()
                {
                    // Fragment Program
                }

                void tess_ctrl()
                {
                    // Tesselation Control Program
                }

                void tess_eval()
                {
                    // Tesselation Evaluation Program
                }
            ")
        )
    )
)