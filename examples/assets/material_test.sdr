shader (
    name: "My Shader"

    include("
        // Include block to be included in every pass of every sub-shader.
    ")

    // Sub shaders to support different shader LOD levels
    sub_shader (
        name: "Sub shader 1"
        lod: 600

        // Similar to Shaderlab's shader keywords for multi_compile directives
        shader_keywords (
            (NORMAL_MAPPING_ON, NORMAL_MAPPING_OFF)
            (_, SHADER_FEATURE_PARALLAX_OCCLUSION_MAPPING)
        )

        // The render queue this shader should be rendered in.
        // can be "Opaque" or "Transparent(n)" where n is a number in the range [0, n] to determine order
        // for transparent rendering.
        render_queue: Opaque

        include ("
            // Include block to be included to each pass of this sub-shader.
        ")

        passes (
            pass (
                name: "My Pass"
                vertex ("
                    // Vertex shader code goes here.
                ")

                fragment ("
                    // Fragment shader code goes here.
                ")

                // Optional
                geometry ("
                    // Geometry shader goes here.
                ")

                // Optional
                tesselation (
                    control ("
                        // Tesselation control shader code goes here.
                    ")

                    evaluation ("
                        // Tesselation evaluation shader code goes here.
                    ")
                )
            )

            // Represents a render pass. At least 1 must be defined.
            pass (
                name: "My Pass"

                vertex ("
                    // Vertex shader code goes here.
                ")

                fragment ("
                    // Fragment shader code goes here.
                ")

                // Optional
                geometry ("
                    // Geometry shader goes here.
                ")

                // Optional
                tesselation (
                    control ("
                        // Tesselation control shader code goes here.
                    ")

                    evaluation ("
                        // Tesselation evaluation shader code goes here.
                    ")
                )
            )
        )
    )
)